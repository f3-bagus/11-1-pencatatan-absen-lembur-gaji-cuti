openapi: 3.0.3
info:
  title: Api Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: My Github
  url: https://github.com/TheReVeaLz
servers:
  - url: http://localhost:3000
tags:
  - name: user
    description: Operations about your user
  - name: admin
    description: Operations about your admin
  - name: super admin
    description: Operations about your super admin
  - name: leave request
    description: Operations about your leave
  - name: presence
    description: Operations about your Presence
  - name: payslips
    description: Operations about your module

paths:
  /api/v1/user/presence:
    get:
      tags:
        - presence
      summary: Get all presences
      security:
        - api_key: []
      description: create a display of the entire presence
      responses:
        200:
          description: Successful response
          content:
            application/json:
              example:
                status: "OK"
                message: "Success"
                data:
                  - id: 1
                    userId: 1
                    presenceDate: "2024-06-12T17:00:00.000Z"
                    checkIn: "2024-06-13T16:02:25.000Z"
                    checkOut: null
                    overtime: null
                    status: "LATE"
                    createdAt: "2024-06-13T16:02:25.000Z"
                    updatedAt: "2024-06-13T16:02:25.000Z"
                    User:
                      id: 1
                      name: "root"
                      email: "root@gmail.com"
                      encryptedPassword: "$2b$10$XfgiOba1Wff93hHSFN7S1ewj5Zsx8T70Ox6baED5E/tvs9R8K0f06"
                      phoneNumber: "082112345678"
                      image: "https://res.cloudinary.com/djsjnrfv0/image/upload/v1702988069/BINAR/mqtkzduziqwhdvxu1vzh.png"
                      address: null
                      privilege: "ROOT"
                      roleId: 1
                      createdAt: "2024-06-13T15:55:07.000Z"
                      updatedAt: "2024-06-13T15:55:07.000Z"
                  - id: 2
                    userId: 1
                    presenceDate: "2024-06-13T17:00:00.000Z"
                    checkIn: "2024-06-13T23:33:35.000Z"
                    checkOut: null
                    overtime: null
                    status: "ONTIME"
                    createdAt: "2024-06-13T23:33:35.000Z"
                    updatedAt: "2024-06-13T23:33:35.000Z"
                    User:
                      id: 1
                      name: "root"
                      email: "root@gmail.com"
                      encryptedPassword: "$2b$10$XfgiOba1Wff93hHSFN7S1ewj5Zsx8T70Ox6baED5E/tvs9R8K0f06"
                      phoneNumber: "082112345678"
                      image: "https://res.cloudinary.com/djsjnrfv0/image/upload/v1702988069/BINAR/mqtkzduziqwhdvxu1vzh.png"
                      address: null
                      privilege: "ROOT"
                      roleId: 1
                      createdAt: "2024-06-13T15:55:07.000Z"
                      updatedAt: "2024-06-13T15:55:07.000Z"

        "401":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Unauthorized"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Failed to get presence."
    
    post:
      tags:
        - presence
      summary: Create a new presence record
      security:
        - api_key: []
      description: Create a new presence record with the provided details.
      responses:
        "201":
          description: Presence created successfully.
          content:
            application/json:
              example:
                status: "OK"
                message: "Presence data was created successfully."
                data:
                  id: 2
                  userId: 1
                  presenceDate: "2024-06-13T17:00:00.000Z"
                  checkIn: "2024-06-13T23:33:35.000Z"
                  checkOut: "2024-06-13T23:53:50.806Z"
                  overtime: null
                  status: "ONTIME"
                  createdAt: "2024-06-13T23:33:35.000Z"
                  updatedAt: "2024-06-13T23:53:50.811Z"
                  User:
                    id: 1
                    name: "root"
                    email: "root@gmail.com"
                    encryptedPassword: "$2b$10$XfgiOba1Wff93hHSFN7S1ewj5Zsx8T70Ox6baED5E/tvs9R8K0f06"
                    phoneNumber: "082112345678"
                    image: "https://res.cloudinary.com/djsjnrfv0/image/upload/v1702988069/BINAR/mqtkzduziqwhdvxu1vzh.png"
                    address: null
                    privilege: "ROOT"
                    roleId: 1
                    createdAt: "2024-06-13T15:55:07.000Z"
                    updatedAt: "2024-06-13T15:55:07.000Z"
        "400":
          description: Bad Request. The request is malformed or missing required parameters.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Required parameters are missing"
        "401":
          description: Unauthorized. Invalid or missing API key.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Unauthorized"
        "500":
          description: Internal Server Error. Something went wrong on the server.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Failed to create presence"
                        
  /api/v1/user/presence/{id}:
    get:
      tags:
        - presence
      summary: Get detaisl Presence
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: integer
            example: "1"
          required: true
      security:
        - api_key: []
      description: Retrieve details of a specific presence record
      responses:
            200:
              description: Successful response
              content:
                application/json:
                  example:
                    status: "OK"
                    message: "Success"
                    data:
                      id: 1
                      userId: 1
                      presenceDate: "2024-06-12T17:00:00.000Z"
                      checkIn: "2024-06-13T16:02:25.000Z"
                      checkOut: null
                      overtime: null
                      status: "LATE"
                      createdAt: "2024-06-13T16:02:25.000Z"
                      updatedAt: "2024-06-13T16:02:25.000Z"
                      User:
                        id: 1
                        name: "root"
                        email: "root@gmail.com"
                        encryptedPassword: "$2b$10$XfgiOba1Wff93hHSFN7S1ewj5Zsx8T70Ox6baED5E/tvs9R8K0f06"
                        phoneNumber: "082112345678"
                        image: "https://res.cloudinary.com/djsjnrfv0/image/upload/v1702988069/BINAR/mqtkzduziqwhdvxu1vzh.png"
                        address: null
                        privilege: "ROOT"
                        roleId: 1
                        createdAt: "2024-06-13T15:55:07.000Z"
                        updatedAt: "2024-06-13T15:55:07.000Z"
            401:
              description: Unauthorized
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/FAIL'
                  example:
                    status: "FAIL"
                    message: "Unauthorized"
            500:
              description: Internal Server Error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/FAIL'
                  example:
                    status: "FAIL"
                    message: "Internal Server Error"
  
    put:
      tags:
        - presence
      summary: Update Presence Details by ID
      description: Update presence details for the specified presence ID.
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: integer
            example: "1"
          required: true
      responses:
        "200":
          description: Presence updated successfully.
          content:
            application/json:
              example:
                status: "OK"
                message: "Presence data was updated successfully."
                data:
                  id: 2
                  userId: 1
                  presenceDate: "2024-06-13T17:00:00.000Z"
                  checkIn: "2024-06-13T23:33:35.000Z"
                  checkOut: "2024-06-14T06:57:19.286Z"
                  overtime: null
                  status: "ONTIME"
                  createdAt: "2024-06-13T23:33:35.000Z"
                  updatedAt: "2024-06-13T23:57:19.324Z"
        "400":
          description: Bad Request. The request is malformed or missing required parameters.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Failed to update presence. Presence not found"
        "401":
          description: Unauthorized. Invalid or missing API key.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Unauthorized"
        "500":
          description: Internal Server Error. Something went wrong on the server.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Internal Server Error"
    delete:
      tags:
        - presence
      summary: Delete presence by ID
      description: Delete the presence record with the specified ID.
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: integer
            example: "1"
          required: true
      responses:
        "200":
          description: Presence deleted successfully.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OK"
                  - type: object
                    properties:
                      status:
                        type: string
                        example: "OK"
                      message:
                        type: string
                        example: "Presence data was Deleted successfully."
        "400":
          description: Bad Request. The request is malformed or missing required parameters.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Failed to delete presence. Presence not found"
        
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Internal Server Error"

  /api/v1/admin/leaves:
    get:
      tags:
        - leave request
      summary: Get all leave requests
      description: Retrieve all leave requests for admin approval.
      operationId: getAllLeaveRequests
      security:
        - api_key: []
      responses:
        "200":
          description:  Successful response. Retrieves all leave requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "All data successfully retrieved."
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: "#/components/schemas/Verify"

        "400":
          description: Bad Request. Internal Server Error.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Your account is not exist."

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "OTP is invalid."
  /api/v1/user/leaves:
    get:
      tags:
        - leave request
      summary: Get user's leave requests
      description: Retrieve leave requests submitted by the user.
      operationId: getUserLeaveRequests
      security:
        - api_key: []
      responses:
        "200":
          description: Successful response. Retrieves user's leave requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "success"

        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Your account is not exist."

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "OTP is invalid."
    
    post:
      tags:
        - leave request
      summary: Request Leave
      description: Request leave with specified start and end dates.
      operationId: requestLeave
      security:
        - api_key: []
      requestBody:
        description: Object containing details for leave request.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  example: 2024-06-15T13:17:28.475Z
                endDate:
                  type: string
                  format: date
                  example: 2024-06-15T13:17:28.475Z
              
      responses:
        "200":
          description: Leave request successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "All data successfully retrieved."
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      requestDate:
                        type: string
                        format: date-time
                        example: "2024-06-15T13:17:28.475Z"
                      userId:
                        type: integer
                        example: 1
                      startDate:
                        type: string
                        format: date-time
                        nullable: true
                        example: null
                      endDate:
                        type: string
                        format: date-time
                        nullable: true
                        example: null
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2024-06-15T13:17:28.475Z"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2024-06-15T13:17:28.475Z"

        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Your account is not exist."

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "OTP is invalid."
                        
  /api/v1/admin/leaves/{id}:
    post:
      tags:
        - leave request
      summary: Respond to Leave Request
      description: Accept or reject a leave request by ID.
      operationId: respondToLeaveRequest
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: integer
            example: "1"
          required: true
      requestBody:
        description: Object containing response details (status = ACCEPTED or REJECTED).
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                phone:
                  type: string
                  example: "1234567890"
                startDate:
                  type: string
                  format: date-time
                  example: "2024-06-15T13:17:28.475Z"
                endDate:
                  type: string
                  format: date-time
                  example: "2024-06-15T13:17:28.475Z"
                status:
                  type: string
                  enum:
                    - PENDING
                    - ACCEPTED
                    - REJECTED
                  example: "PENDING"

      responses:
        "200":
          description: Resend-Otp
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "You can't change confirmed data."

        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Your account is not exist."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Your account is not exist."

                        
  /api/v1/user/payslips:
    get:
      tags:
        - payslips
      summary: Get user payslips
      description: Retrieve a list of payslips for the user
      operationId: getUserPayslips
      security:
        - api_key: []
      responses:
        "200":
          description: List of user payslips
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Success"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 51
                        periodStart:
                          type: string
                          format: date-time
                          example: "2024-05-31T17:00:00.000Z"
                        periodEnd:
                          type: string
                          format: date-time
                          example: "2024-06-30T17:00:00.000Z"
                        salary:
                          type: integer
                          example: 20000000
                        overtimeBonus:
                          type: integer
                          example: 0
                        deduction:
                          type: integer
                          example: 7250000
                        netWorth:
                          type: integer
                          example: 12750000
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-06-14T01:04:57.000Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2024-06-14T01:04:57.000Z"
                        userId:
                          type: integer
                          example: 1
                        User:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: "root"
                            email:
                              type: string
                              example: "root@gmail.com"
                            encryptedPassword:
                              type: string
                              example: "$2b$10$XfgiOba1Wff93hHSFN7S1ewj5Zsx8T70Ox6baED5E/tvs9R8K0f06"
                            phoneNumber:
                              type: string
                              example: "082112345678"
                            image:
                              type: string
                              example: "https://res.cloudinary.com/djsjnrfv0/image/upload/v1702988069/BINAR/mqtkzduziqwhdvxu1vzh.png"
                            address:
                              type: string
                              nullable: true
                              example: null
                            privilege:
                              type: string
                              example: "ROOT"
                            roleId:
                              type: integer
                              example: 1
                            createdAt:
                              type: string
                              format: date-time
                              example: "2024-06-13T15:55:07.000Z"
                            updatedAt:
                              type: string
                              format: date-time
                              example: "2024-06-13T15:55:07.000Z"
        "401":
          description: Unauthorized. Invalid or missing API key.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Internal Server Error"

  /api/v1/admin/payslips:
    get:
      tags:
        - payslips
      summary: Get admin payslips
      description: Retrieve a list of payslips for the admin
      operationId: getAdminPayslips
      security:
        - api_key: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "User list"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        name:
                          type: string
                          example: "Johnny"
                        email:
                          type: string
                          example: "johnny@gmail.com"
                      required:
                        - id
                        - name
                        - email
                    example:
                      - id: 2
                        name: "Johnny"
                        email: "johnny@gmail.com"
                      - id: 3
                        name: "Fikri"
                        email: "fikri@gmail.com"
                      - id: 4
                        name: "Brian"
                        email: "brian@gmail.com"
                      - id: 5
                        name: "Ranggawarsita"
                        email: "ranggawarsita@gmail.com"
                      - id: 6
                        name: "Jayabaya"
                        email: "jayabaya@gmail.com"
        "401":
          description: Unauthorized. Invalid or missing API key.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Internal Server Error"
  /api/v1/admin/payslips/{id}:
    get:
      tags:
        - payslips
      summary: Get admin payslip by ID
      description: Retrieve a specific admin payslip by ID
      operationId: getAdminPayslipById
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: integer
            example: "1"
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "User list"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        name:
                          type: string
                          example: "Johnny"
                        email:
                          type: string
                          example: "johnny@gmail.com"
                      required:
                        - id
                        - name
                        - email
                    example:
                      - id: 2
                        name: "Johnny"
                        email: "johnny@gmail.com"
                      - id: 3
                        name: "Fikri"
                        email: "fikri@gmail.com"
                      - id: 4
                        name: "Brian"
                        email: "brian@gmail.com"
                      - id: 5
                        name: "Ranggawarsita"
                        email: "ranggawarsita@gmail.com"
                      - id: 6
                        name: "Jayabaya"
                        email: "jayabaya@gmail.com"
        "401":
          description: Unauthorized. Invalid or missing API key.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Internal Server Error"

  /api/v1/admin/payslips/generate:
    post:
      tags:
        - payslips
      summary: Create module
      security:
        - api_key: []
      description: create a module using the chapter ID
      operationId: createModuleInChapter
      requestBody:
        description: Object containing the period start and end dates
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                periodStart:
                  type: string
                  format: date-time
                  example: "2024-06-01T00:00:00Z"
                periodEnd:
                  type: string
                  format: date-time
                  example: "2024-06-30T23:59:59Z"
              required:
                - periodStart
                - periodEnd

      responses:
        "200":
          description: Create Module
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Success"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "e1e4ec04-0ca4-4b8e-b3c3-4011c5ea2a1f"
                        chapterId:
                          type: string
                          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        title:
                          type: string
                          example: "Abstraction Javascript"
                        Video:
                          type: string
                          example: "https://youtu.be/ixOd42SEUF0"
                        createdAt:
                          type: string
                          example: "2023-10-18T13:42:59.162Z"
                        updatedAt:
                          type: string
                          example: "2023-10-18T13:42:59.162Z"

                          
                
        "400":
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Failed to get the data. Please fill period start and end.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Unauthorized
                        
        "403":
          description: Forbidden access
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: FORBIDDEN.

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: "Failed to Create Module"


  /api/v1/user/Register:
    post:
      tags:
        - admin
      summary: Register new user
      description: User registration must first log in using admin or super admin and provide the token
      operationId: registerUser
      security:
        - api_key: []
      requestBody:
        description: Register new admin
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAdmin"
        required: true

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: OK
                  message:
                    type: string
                    example: Data was created successfully.
                  data:
                    $ref: "#/components/schemas/User3"

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Body is missing.

        "500":
          description: Invalid operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Failed to create data. Validation error

  /api/v1/admin/register:
    post:
      tags:
        - super admin
      summary: Register new user
      description: User registration must first log in using super admin and provide the token
      security:
        - api_key: []
      requestBody:
        description: Register new admin
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAdmin"
        required: true

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: OK
                  message:
                    type: string
                    example: Data was created successfully.
                  data:
                    $ref: "#/components/schemas/User3"

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Body is missing.

        "500":
          description: Invalid operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Failed to create data. Validation error

  /api/v1/user/login:
    post:
      tags:
        - user
      summary: Login user
      description: Login user
      operationId: loginUser
      requestBody:
        description: Login user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RootLogin"
        required: true

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OK"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Login successfully.
                      data:
                        type: object
                        allOf:
                          - $ref: "#/components/schemas/User"
                          - type: object
                            properties:
                              token:
                                type: string
                                example: >-
                                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQyZDZkNzkyLWZlNzUtNDYxMy1iMWMyLTU3OWVkMDU2NGIzYyIsImlhdCI6MTY5NzgzNDE3OSwiZXhwIjoxNjk3ODM3Nzc5fQ.JHrFKoKLtze1NwbWoKLsZR3-Gs3LtT5MtHJG-WVmyPs

        "400":
          description: Invalid operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Please input email and password.

        "404":
          description: Email or password is invalid
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Email or password is invalid.

  /api/v1/user/roles:
    get:
      tags:
        - admin
      summary: Get all user list
      description: Get all user list
      operationId: getUserList
      security:
        - api_key: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "User list"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        order:
                          type: integer
                          example: 1
                        roleName:
                          type: string
                          example: "ADMIN"
                        salary:
                          type: integer
                          example: 9000000
                        overtimeBonus:
                          type: integer
                          example: 50000
                        absenceDeduction:
                          type: integer
                          example: 100000
                        createdAt:
                          type: string
                          example: "2024-06-13T15:55:07.000Z"
                        updatedAt:
                          type: string
                          example: "2024-06-13T15:55:07.000Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Unauthorized

        "403":
          description: Forbidden access
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: FORBIDDEN.
        "500":
          description: Token expired
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: jwt expired


  /api/v1/user/users:
    get:
      tags:
        - admin
      summary: Get all user list
      description: Get all user list
      operationId: get User List
      security:
        - api_key: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OK"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          oneOf:
                            - $ref: "#/components/schemas/User"
                            - $ref: "#/components/schemas/User2"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Unauthorized

        "403":
          description: Forbidden access
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: FORBIDDEN.
        "500":
          description: Token expired
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: jwt expired

    put:
      tags:
        - user
      summary: Update Profile for members
      description: Update Profile Users
      operationId: updateUsers
      security:
        - api_key: []
      requestBody:
        description: Register new admin
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OK"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          oneOf:
                            - $ref: "#/components/schemas/User"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Unauthorized
                        
        "500":
          description: Token expired
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: jwt expired
                        


  /api/v1/user/current-user:
    post:
      tags:
        - user
      summary: Get current user information
      description: Get current user information
      operationId: currentUser
      security:
        - api_key: []

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OK"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Login successfully.
                      data:
                        $ref: "#/components/schemas/User"

        "400":
          description: Invalid operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        example: Please input email and password.

        "500":
          description: Invalid token or JWT expired
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/FAIL"
                  - type: object
                    properties:
                      message:
                        enum:
                          - invalid token
                          - jwt expired


                        
  /api/v1/notifications:
    get:
      tags:
        - user
      summary: Get current user information
      description: Get current user information
      operationId: notifications
      security:
        - api_key: []

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OK"
                  - type: object
                    properties:
                      status: 
                        type: string
                        example: OK
                      message:
                        type: string
                        example: Success.
                      data:
                        allOf:
                        - $ref: "#/components/schemas/Notif1"
                        - properties:
                            notification:
                              type: array
                              items: 
                                $ref: "#/components/schemas/Notif2"

components:
  schemas:
    OK:
      type: object
      properties:
        status:
          type: string
          example: OK
        message:
          type: string
          example: Success

    Deleted:
      type: object
      properties:
        status:
          type: string
          example: OK
        message:
          type: string
          example: Deleted successfully.

    FAIL:
      type: object
      properties:
        status:
          type: string
          example: FAIL
        message:
          type: string

    MemberRequest:
      type: object
      properties:
        name:
          type: string
          example: TESTER2
        email:
          type: string
          example: test2@gmail.com
        password:
          type: string
          example: test
        phoneNumber:
          type: string
          example: "082112345678"
        address:
          type: string
          example: Earth

    RegisterAdmin:
      type: object
      properties:
        name:
          type: string
          example: TESTER
        email:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: test
        phoneNumber:
          type: string
          example: "082112345678"
        address:
          type: string
          example: Earth

    RootLogin:
      type: object
      properties:
        email:
          type: string
          example: root@gmail.com
        password:
          type: string
          example: root

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "root"
        email:
          type: string
          example: "root@gmail.com"
        phoneNumber:
          type: string
          example: "082112345678"
        image:
          type: string
          example: "https://res.cloudinary.com/djsjnrfv0/image/upload/v1702988069/BINAR/mqtkzduziqwhdvxu1vzh.png"
        address:
          type: string
          example: null
        privilege:
          type: string
          example: "ROOT"
        roleId:
          type: integer
          example: 1
        createdAt:
          type: string
          example: "2024-06-13T15:55:07.000Z"
        updatedAt:
          type: string
          example: "2024-06-13T15:55:07.000Z"
        JobRole:
          type: object
          properties:
            roleName:
              type: string
              example: "OWNER"
            salary:
              type: integer
              example: 20000000

    User2:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "root"
        email:
          type: string
          example: "root@gmail.com"
        phoneNumber:
          type: string
          example: "082112345678"
        image:
          type: string
          example: "https://res.cloudinary.com/djsjnrfv0/image/upload/v1702988069/BINAR/mqtkzduziqwhdvxu1vzh.png"
        address:
          type: string
          example: null
        privilege:
          type: string
          example: "ROOT"
        roleId:
          type: integer
          example: 1
        createdAt:
          type: string
          example: "2024-06-13T15:55:07.000Z"
        updatedAt:
          type: string
          example: "2024-06-13T15:55:07.000Z"
        JobRole:
          type: object
          properties:
            roleName:
              type: string
              example: "OWNER"
            salary:
              type: integer
              example: 20000000

    User3:
      type: object
      properties:
        id:
          type: string
          example: 0d05f684-1a9c-4481-b5a8-cb7442cedeae
        name:
          type: string
          example: TESTER2
        email:
          type: string
          example: test2@gmail.com
        encryptedPassword:
          type: string
          example: $2b$10$P0VY83faE3Wy71l5ZGq4ZunVoxb6wy4q1SxZAZLU7PgOm4RMfw0oK
        phoneNumber:
          type: string
          example: "082112345678"
        address:
          type: string
          example: Earth
        role:
          type: string
          enum:
            - ROOT
            - ADMIN
            - MEMBER
          example: MEMBER
        createdAt:
          type: string
          example: "2023-10-18T13:42:59.162Z"
        updatedAt:
          type: string
          example: "2023-10-18T13:42:59.162Z"

          
  
    Notif1:
      type: object
      properties:
        name:
          type: string
          example: Bob
        email:
          type: string
          example: bob@mail.com
        role:
          type: string
          example: MEMBER
          
    Notif2: 
      type: object
      properties:
        id:
          type: string
          example: 84be766c-e5f3-406f-824a-eee9751e2958
        title:
          type: string
          example: Register Success
        message:
          type: string
          example: Helooo !!!, Welcome to Ideamy Academy
        createdAt:
          type: string
          example: 2023-12-19T06:49:23.721Z

 
    Verify:
      type: object
      properties:
        email:
          type: string
          example: test2@gmail.com
        otp:
          type: string
          example: 031442

    ResendOtp:
      type: object
      properties:
        email:
          type: string
          example: test2@gmail.com

    ForgotPassword:
      type: object
      properties:
        email:
          type: string
          example: test2@gmail.com
        otp:
          type: string
          example: 658277
        password:
          type: string
          example: test1234


  securitySchemes:
    api_key:
      type: apiKey
      name: authorization
      in: header
